/*
 * Serial Communication Diagnostic Tool
 * 
 * This is a simple diagnostic tool to test serial communication between
 * FC and NAVC. To use it, rename to remove the .disable extension and
 * upload to either board.
 */

#include <Arduino.h>

// UART2 pins for STM32
#define UART2_TX PA2  
#define UART2_RX PA3  
HardwareSerial Serial2(UART2_TX, UART2_RX);

// For LED blinking
const int LED_PIN = PC13;  // On-board LED pin
unsigned long lastBlink = 0;
bool ledState = false;

// For serial echoing
String inputBuffer = "";
bool commandComplete = false;

void setup() {
  // Initialize USB Serial
  Serial.begin(115200);
  
  // Initialize UART2
  Serial2.begin(115200);
  
  // Configure LED
  pinMode(LED_PIN, OUTPUT);
  
  delay(1000);
  Serial.println("\n\nSerial Diagnostic Tool");
  Serial.println("=====================");
  Serial.println("Commands:");
  Serial.println("  echo <message> - Echo message to Serial2");
  Serial.println("  blink - Toggle LED blink rate");
  Serial.println("  test - Send test command sequence");
}

void loop() {
  // Blink LED to show the program is running
  if (millis() - lastBlink > 500) {
    ledState = !ledState;
    digitalWrite(LED_PIN, ledState ? LOW : HIGH);
    lastBlink = millis();
  }
  
  // Check for incoming Serial2 data and echo to USB Serial
  while (Serial2.available() > 0) {
    char c = Serial2.read();
    Serial.print("S2 RX: ");
    if (c >= 32 && c <= 126) { // Printable ASCII
      Serial.println((char)c);
    } else {
      Serial.print("0x");
      Serial.println(c, HEX);
    }
  }
  
  // Check for incoming USB Serial commands
  while (Serial.available() > 0) {
    char c = Serial.read();
    if (c == '\n' || c == '\r') {
      if (inputBuffer.length() > 0) {
        commandComplete = true;
      }
    } else {
      inputBuffer += c;
    }
  }
  
  // Process commands
  if (commandComplete) {
    inputBuffer.trim();
    Serial.print("> ");
    Serial.println(inputBuffer);
    
    if (inputBuffer.startsWith("echo ")) {
      String message = inputBuffer.substring(5);
      Serial.print("Sending to Serial2: ");
      Serial.println(message);
      Serial2.println(message);
    } 
    else if (inputBuffer == "blink") {
      Serial.println("Toggling LED blink rate");
      // This is just a placeholder - you could implement different blink rates
    }
    else if (inputBuffer == "test") {
      Serial.println("Sending test sequence...");
      Serial2.println("TEST");
      delay(500);
      Serial2.println("<TEST_MESSAGE>");
      delay(500);
      Serial2.println("RUN_TEST");
    }
    else {
      Serial.println("Unknown command");
    }
    
    inputBuffer = "";
    commandComplete = false;
  }
}
